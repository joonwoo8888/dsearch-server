# 액션 이름
name: Dsearch Server CI

env:
  DOCKER_IMAGE: dsearch-server


# 마스터 푸시, 풀 리퀘스트 이벤트 발생하면 아래 잡들을 실행함.
on:
  push:
    branches: [ release/** ]
  pull_request:
    branches: [ release/** ]

jobs:
# 빌드 잡 정의시작.
  build:  
#   실행 플랫폼은 ubuntu사용, runs: windows, mac os, ubuntu 있음.
    runs-on: ubuntu-latest
    steps:
#     소스코드 checkout
    - uses: actions/checkout@v2


#     JDK 활성화
    - name: Setup Java JDK
      uses: actions/setup-java@v2.5.0
      with:
        java-version: 8.0.312+7
        distribution: adopt

#     java maven 캐시 불러움
    - name: Maven Cache
      uses: skjolber/maven-cache-github-action@v1.1
      with:
        step: restore

#     pom.xml 버전을 추출합니다.
    - name: extract version for pom.xml
      run: echo "VERSION=$(grep -oPm2 "(?<=<version>)[^<]+" pom.xml | sed -n 2p)" >> $GITHUB_ENV
      
    - name: env branch
      run: echo "${{ GITHUB_REF_NAME }}"
      
    - name: env branch split
      run: echo "${{ GITHUB_REF_NAME }}"|cut -d '/' -f 2
      
      
    - name: env repository
      run: echo "${{ GITHUB_REPOSITORY }}"
      
    - name: env repository split
      run: echo "${{ GITHUB_REPOSITORY }}"|cut -d '/' -f 2
      
      
      
#     Maven 빌드
    - name: Spring Boot Build with Maven
      run: mvn package -Dskip.test=true
    
#     java maven 캐시 저장
    - name: Maven Cache
      uses: skjolber/maven-cache-github-action@v1.1
      with:
        step: save
    
    - name: file listing
      run: ls -al
      
# #     ghcr.io 로그인
#     - name: Docker Login
#       uses: docker/login-action@v1.12.0
#       with:
#         registry: ghcr.io
#         username: joonwoo8888
#         password: ${{ secrets.CR_TOKEN }}

# #     도커 이미지 빌드&저장
#     - name: Docker Build & Push Action
#       uses: mr-smithers-excellent/docker-build-push@v5.6
#       with:
#         registry: ghcr.io
#         buildArgs: VERSION=${{env.VERSION}},PROJECT_NAME=${{ env.DOCKER_IMAGE }}
#         image: ${{ env.DOCKER_IMAGE }}
#         tags: ${{ env.VERSION }}
        
          
